"
BlHousekeepingWorkerPool is a TKTCommonQueueWorkerPool that runs the workers at userBackgroundPriority and limits the number of concurrent tasks so that the UI thread is still responsive.


Public API and Key Messages

The public API and key messages are the same as for TKTCommonWorkerPool.

"
Class {
	#name : #BlHousekeepingWorkerPool,
	#superclass : #BlVariableSizeWorkerPool,
	#classVars : [
		'Current'
	],
	#category : #'GToolkit-Images-TaskIt'
}

{ #category : #scheduling }
BlHousekeepingWorkerPool class >> schedule: aValuable maxPoolSize: maxPoolSize [
	"Schedule the supplied valuable with maxPoolSize worker pools"

	TKTConfiguration processProvider: BlTKTHousekeepingProcessProvider new during: [ 
		(self withPoolSize: maxPoolSize) schedule: aValuable ].

]

{ #category : #initialization }
BlHousekeepingWorkerPool >> initialize [ 

	super initialize.
	self name: 'BlHousekeepingWorker-', self identityHash asString.
]

{ #category : #printing }
BlHousekeepingWorkerPool >> printOn: aStream [
	| freeWorkers | 
	freeWorkers := workers select: #isFree.
	aStream
		nextPutAll: self class name;
		nextPutAll: '(';
		nextPutAll: 'name:';
		nextPutAll: name;
		nextPutAll: 'poolMaxSize: ';
		print: poolMaxSize;
		nextPutAll: '; busyWorkers: ';
		print: workers size - freeWorkers size;
		nextPutAll: '; freeWorkers: ';
		print: freeWorkers size;
		nextPutAll: ')'
]
